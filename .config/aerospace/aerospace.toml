# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking
# In your config, you can drop keys you don't care about
# The absent keys will fallback to their default values

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 32

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 8
inner.vertical =   8
outer.left =       8
outer.bottom =     8
outer.top =        8
outer.right =      8

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
cmd-ctrl-slash = 'layout tiles horizontal vertical'
cmd-ctrl-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
cmd-ctrl-h = 'focus left'
cmd-ctrl-j = 'focus down'
cmd-ctrl-k = 'focus up'
cmd-ctrl-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#join-with
ctrl-alt-h = 'join-with left'
ctrl-alt-l = 'join-with right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
cmd-ctrl-1 = 'workspace üë®üèª‚Äçüíª'
cmd-ctrl-2 = 'workspace üíº'
cmd-ctrl-3 = 'workspace üí¨'
cmd-ctrl-4 = 'workspace üçø'
cmd-ctrl-5 = 'workspace üì¶'

cmd-ctrl-s = 'workspace S'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus-monitor
cmd-ctrl-rightSquareBracket = 'focus-monitor right'
cmd-ctrl-leftSquareBracket = 'focus-monitor left'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace üë®üèª‚Äçüíª'
alt-shift-2 = 'move-node-to-workspace üíº'
alt-shift-3 = 'move-node-to-workspace üí¨'
alt-shift-4 = 'move-node-to-workspace üçø'
alt-shift-5 = 'move-node-to-workspace üì¶'

alt-shift-s = 'move-node-to-workspace S'

# See: https://nikitabobko.github.io/AeroSpace/commands#fullscreen
alt-shift-z = 'fullscreen'
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
cmd-ctrl-w = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
cmd-ctrl-n = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[workspace-to-monitor-force-assignment]
S = 'secondary'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

# 'on-window-detected' callbacks
[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
if.during-aerospace-startup = true
run = ['move-node-to-workspace üë®üèª‚Äçüíª']

[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = ['move-node-to-workspace üë®üèª‚Äçüíª']

[[on-window-detected]]
if.app-id = 'net.kovidgoyal.kitty'
run = ['move-node-to-workspace üë®üèª‚Äçüíª']

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = ['move-node-to-workspace üíº']

[[on-window-detected]]
if.app-id = 'com.readdle.SparkDesktop.appstore'
run = ['move-node-to-workspace üíº']

[[on-window-detected]]
if.app-id = 'notion.id'
run = ['move-node-to-workspace üíº']

[[on-window-detected]]
if.app-id = 'com.linear'
run = ['move-node-to-workspace üíº']

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = ['move-node-to-workspace üí¨']

[[on-window-detected]]
if.app-id = 'com.facebook.archon.developerID'
run = ['move-node-to-workspace üí¨']

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = ['move-node-to-workspace üí¨']

[[on-window-detected]]
if.app-id = 'com.brave.Browser'
run = ['move-node-to-workspace üçø']

[[on-window-detected]]
if.app-id = 'dev.zed.Zed'
run = ['move-node-to-workspace üçø']

[[on-window-detected]]
if.app-id = 'com.bambulab.bambu-studio'
run = ['move-node-to-workspace üì¶']

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.reminders'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.1password.1password'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.openai.chat'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'tandem.app'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'us.zoom.xos'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.transgui'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'org.RedisLabs.RedisInsight-V2'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'org.videolan.vlc'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'cx.c3.theunarchiver'
run = ['layout floating']
